services:
  postgres:
    env_file:
    - .env
    image: postgres:14-alpine
    restart: always 
    container_name: postgres_db
    ports:
      - ${DB_PORT}:5432
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres-data:/var/lib/postgresql/data

  redis:
    env_file:
    - .env
    image: 'redis:7-alpine'
    restart: always 
    container_name: redis_db
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - '6379:6379'
    volumes:
      - redis-data:/var/lib/redis/data

  queue: 
    build: 
      context: .
      dockerfile: Dockerfile
    restart: always 
    container_name: queue_app
    ports:
      - 3001:3001
    volumes:
      - .:/app
    command: node /app/bot/messenger/queue.js
    depends_on:
      - redis

  worker: 
    build: 
      context: .
      dockerfile: Dockerfile
    restart: always 
    container_name: worker_app
    volumes:
      - .:/app
    command: node /app/bot/messenger/worker.js
    depends_on:
      - redis

  task: 
    build: 
      context: .
      dockerfile: Dockerfile
    restart: always 
    container_name: task_app
    volumes:
      - .:/app
    command: node /app/bot/messenger/task.js
    
  web:
    build: 
      context: .
      dockerfile: Dockerfile
    restart: always 
    container_name: web_app
    environment:
      NODE_ENV: production
    volumes:
      - .:/app
    ports:
      - 3000:3000
    command: npm start --host 0.0.0.0
    depends_on:
      - postgres

volumes:
  postgres-data:
  redis-data: